
// This file is generated by Firebase Genkit.
'use server';

/**
 * @fileOverview A flow to suggest student candidates whose skills align with the opportunity requirements.
 *
 * - suggestSuitableCandidates - A function that handles the suggestion process.
 * - SuggestSuitableCandidatesInput - The input type for the suggestSuitableCandidates function.
 * - SuggestSuitableCandidatesOutput - The return type for the suggestSuitableCandidates function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const SuggestSuitableCandidatesInputSchema = z.object({
  opportunityRequirements: z
    .string()
    .describe('Los requisitos para la oportunidad.'),
  studentSkills: z.array(z.string()).describe('Las habilidades del estudiante.'),
});
export type SuggestSuitableCandidatesInput = z.infer<
  typeof SuggestSuitableCandidatesInputSchema
>;

const SuggestSuitableCandidatesOutputSchema = z.object({
  suitabilityScore: z
    .number()
    .describe(
      'Una puntuación que indica qué tan bien coinciden las habilidades del estudiante con los requisitos de la oportunidad.'
    ),
  justification: z
    .string()
    .describe(
      'Una justificación para la puntuación de idoneidad, explicando por qué el estudiante es un buen candidato para la oportunidad.'
    ),
});
export type SuggestSuitableCandidatesOutput = z.infer<
  typeof SuggestSuitableCandidatesOutputSchema
>;

export async function suggestSuitableCandidates(
  input: SuggestSuitableCandidatesInput
): Promise<SuggestSuitableCandidatesOutput> {
  return suggestSuitableCandidatesFlow(input);
}

const suggestSuitableCandidatesPrompt = ai.definePrompt({
  name: 'suggestSuitableCandidatesPrompt',
  input: {schema: SuggestSuitableCandidatesInputSchema},
  output: {schema: SuggestSuitableCandidatesOutputSchema},
  prompt: `Eres un asistente de IA que ayuda a las empresas a encontrar candidatos estudiantiles adecuados para sus oportunidades.

Se te proporcionan los requisitos de la oportunidad y las habilidades del estudiante. Debes evaluar qué tan bien coinciden las habilidades del estudiante con los requisitos de la oportunidad y proporcionar una puntuación de idoneidad entre 0 y 1 (inclusive), y una justificación para la puntuación.

Requisitos de la Oportunidad: {{{opportunityRequirements}}}
Habilidades del Estudiante: {{#each studentSkills}}{{{this}}}{{#unless @last}}, {{/unless}}{{/each}}

Puntuación de Idoneidad: {{suitabilityScore}}
Justificación: {{justification}}`,
});

const suggestSuitableCandidatesFlow = ai.defineFlow(
  {
    name: 'suggestSuitableCandidatesFlow',
    inputSchema: SuggestSuitableCandidatesInputSchema,
    outputSchema: SuggestSuitableCandidatesOutputSchema,
  },
  async input => {
    const {output} = await suggestSuitableCandidatesPrompt(input);
    return output!;
  }
);
